select count(*) from cd.facilities;
select count(*) from cd.facilities where guestcost>10;

select recommendedby, count(*) from cd.members where recommendedby
is not null group by recommendedby order by recommendedby;

select facid, sum(slots) from cd.bookings
group by facid order by facid;

select facid, sum(slots) from cd.bookings where starttime>='2012-09-01' and starttime<'2012-10-01'
group by facid order by sum(slots);

select facid,extract(month from starttime) as month,sum(slots)
from cd.bookings where extract(year from starttime) =2012
group by facid, month
order by facid,month;

select count(distinct memid) from cd.bookings;

select facid, sum(slots) from cd.bookings
group by facid having sum(slots)>1000 order by facid ;

select f.name, sum (b.slots* case when memid=0 then f.guestcost else f.membercost end) revenue
from cd.facilities f join cd.bookings b on b.facid=f.facid
group by f.name
order by revenue;

select f.name, sum(b.slots* case when memid=0 then f.guestcost else f.membercost end) revenue
from cd.facilities f join cd.bookings b on b.facid=f.facid
group by f.name
HAVING sum(b.slots* case when memid=0 then f.guestcost else f.membercost end)<1000
order by revenue;

select facid, sum(slots) as Total from cd.bookings group by facid order by sum(slots) desc limit 1;

select facid, extract(month from starttime)as month,sum(slots) from cd.bookings
where starttime>='2012-01-01' and starttime<'2013-01-01' group by rollup(facid,month)
order by facid,month;

select f.facid,f.name,cast(sum(b.slots)/2.0 AS NUMERIC(65,2))
from cd.bookings b join cd.facilities f on f.facid=b.facid
group by f.facid,f.name order by f.facid;

 select m.surname,m.firstname,m.memid,min(b.starttime)
 from cd.members as m join cd.bookings b on b.memid=m.memid
 where starttime>'2012-09-01'
 group by m.surname,m.firstname,m.memid
 order by m.memid;

select (select count(*) from cd.members) as count, firstname, surname from cd.members
order by joindate;

select row_number() over(order by joindate),firstname,surname from cd.members
order by joindate;

select facid,sum(slots) as total from cd.bookings
group by facid
having sum(slots)=(select max(sum.t2) from (select sum(slots) as t2 from cd.bookings
group by facid) as sum);

select m.firstname,m.surname, round(sum(b.slots)/2,-1) as hours,
rank() over (order by ((sum(b.slots)+10)/20)*10 desc) as rank from cd.members m join cd.bookings b on b.memid=m.memid
group by m.firstname, m.surname
order by rank,m.firstname,m.surname ;

select f.name, rank() over(order by  sum(case when b.memid=0 then slots*f.guestcost else slots*f.membercost end)desc) as rank  from cd.facilities f join cd.bookings b on b.facid=f.facid
group by f.name
order by rank
limit 3

select name,case when rank=1 then'high' when rank=2 then 'average' else 'low' end revenue
from(select f.name as name,ntile(3) over(order by  sum(case when b.memid=0 then slots*f.guestcost
else slots*f.membercost end)desc) as rank
from cd.facilities f join cd.bookings b on b.facid=f.facid
group by name) as fac
order by rank,name;

select f.name as name,f.initialoutlay/(sum(case when memid = 0 then slots * f.guestcost else slots * f.membercostend)/3-f.monthlymaintenance) as months
from cd.bookings b join cd.facilities f on f.facid=b.facid
group by f.facid
order by name;

select 	dategen.date,(select sum(case when memid=0 then slots*f.guestcost else slots*membercost
end) as rev from cd.bookings b inner join cd.facilities f on b.facid = f.facid
where b.starttime > dategen.date - interval '14 days' and b.starttime < dategen.date + interval '1 day'
)/15 as revenue
from (select cast(generate_series(timestamp '2012-08-01','2012-08-31','1 day') as date) as date
)as dategen order by dategen.date;